name: Build Project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        compiler: [llvm, gcc]
        exclude:
          - os: macos-latest
            compiler: gcc
        include:
          - os: windows-latest
            compiler: msvc
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

        # Setup ubuntu
      - name: Fetch all apt libraries
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: sudo apt-get update

      - name: Install X11 dependencies on Unix-like system
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: sudo apt-get install -y libwayland-dev libxkbcommon-dev xorg-dev

      - name: Install OpenGL on Ubuntu
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: sudo apt-get install -y libgl1 libglx-mesa0 freeglut3-dev

        # Setup MacOs
      - name: Install OpenGL on MacOS
        if: ${{ contains(matrix.os, 'macos') }}
        run: brew install glew

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          vcpkg: false
          cppcheck: false
          clangtidy: false

      # Configure CMake in a 'build' subdirectory.
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      # Build your program with the given configuration
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      # Execute tests defined by the CMake configuration.
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Debug windows
        if: ${{ contains(matrix.os, 'windows') }}
        run: tree ${{github.workspace}}/build/

      - name: Upload Windows Artifact
        if: ${{ contains(matrix.os, 'windows') }}
        uses: actions/upload-artifact@v4
        with:
          name: "FYCApplication-${{ matrix.os }}-${{matrix.compiler}}"
          retention-days: 7
          path: |
            ${{github.workspace}}/build/Application/**/*.exe
            ${{github.workspace}}/build/Application/**/*.fyc

      - name: Upload Macos & Linux artifact
        if: ${{! contains(matrix.os, 'windows') }}
        uses: actions/upload-artifact@v4
        with:
          name: "FYCApplication-${{ matrix.os }}-${{matrix.compiler}}"
          retention-days: 7
          path: |
            ${{github.workspace}}/build/Application/*FYCPhysicsEngine*
            ${{github.workspace}}/build/Application/*.fyc
            
            
